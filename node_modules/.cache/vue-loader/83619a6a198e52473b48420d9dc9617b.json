{"remainingRequest":"C:\\Users\\dhan\\lours\\lours-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\dhan\\lours\\lours-app\\src\\views\\listAll.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\dhan\\lours\\lours-app\\src\\views\\listAll.vue","mtime":1593340486472},{"path":"C:\\Users\\dhan\\lours\\lours-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dhan\\lours\\lours-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\dhan\\lours\\lours-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dhan\\lours\\lours-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBhcGkgfSBmcm9tICcuLi9oZWxwZXJzL2hlbHBlcnMnOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnaXRlbXMnLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBpdGVtczogW10sDQogICAgICBjb2x1bW5zOiBbXQ0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBvbkRlc3Ryb3koaWQpIHsNCiAgICAgIGNvbnN0IHN1cmUgPSB3aW5kb3cuY29uZmlybSgnQXJlIHlvdSBzdXJlPycpOw0KICAgICAgaWYgKCFzdXJlKSByZXR1cm47DQogICAgICBhd2FpdCBhcGkuZGVsZXRlT25lKGlkKTsNCiAgICAgIHRoaXMuZmxhc2goJ0l0ZW0gZGVsZXRlZCBzdWNlc3NmdWxseSEnLCAnc3VjY2VzcycpOw0KICAgICAgY29uc3QgbmV3SXRlbXMgPSB0aGlzLml0ZW1zLmZpbHRlcihpdGVtID0+IGl0ZW0uX2lkICE9PSBpZCk7DQogICAgICB0aGlzLml0ZW1zID0gbmV3SXRlbXM7DQogICAgfQ0KICB9LA0KICBhc3luYyBtb3VudGVkKCkgew0KICAgIHRoaXMuaXRlbXMgPSBhd2FpdCBhcGkuZ2V0QWxsKCk7DQogICAgZm9yIChjb25zdCBwcm9wZXJ0eSBpbiB0aGlzLml0ZW1zWzBdKSB7DQogICAgICBwcm9wZXJ0eSAhPT0nX2lkJyA/IHRoaXMuY29sdW1ucy5wdXNoKHtwcm9wIDogcHJvcGVydHksIGxhYmVsOiBwcm9wZXJ0eS50b1VwcGVyQ2FzZSgpfSkgOiB0cnVlDQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["listAll.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"listAll.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n\t<el-table\r\n    :data=\"items\"\r\n    style=\"width: 100%\">\r\n    <el-table-column v-for=\"(col, i) in columns\" :key=\"i\" v-bind=\"col\">\r\n    </el-table-column>\r\n<!--\r\n    <el-table-column prop=\"_id\" width=\"30\"><el-checkbox size=\"medium\"></el-checkbox></el-table-column>\r\n    <el-table-column label=\"ID\" prop=\"_id\" v-if=\"true\"></el-table-column>\r\n    <el-table-column\r\n      prop=\"sku\"\r\n      label=\"SKU\"\r\n      width=\"180\">\r\n    </el-table-column>\r\n    <el-table-column\r\n      prop=\"name\"\r\n      label=\"Name\"\r\n      width=\"180\">\r\n    </el-table-column>\r\n    -->\r\n\r\n    <el-table-column fixed=\"right\" label=\"Operations\" width=\"250\">\r\n      <template v-slot:default=\"table\">\r\n        <router-link :to=\"{name: 'show', params: { id: table.row._id }}\" tag=\"span\">\r\n          <el-button type=\"primary\" icon=\"el-icon-more\" circle>\r\n          </el-button>\r\n        </router-link>\r\n        <router-link :to=\"{name: 'edit', params: { id: table.row._id }}\" tag=\"span\">\r\n          <el-button type=\"success\" icon=\"el-icon-edit\" circle>\r\n          </el-button>\r\n        </router-link>\r\n        <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click.prevent=\"onDestroy(table.row._id)\">\r\n        </el-button>\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { api } from '../helpers/helpers';\r\nexport default {\r\n  name: 'items',\r\n  data() {\r\n    return {\r\n      items: [],\r\n      columns: []\r\n    };\r\n  },\r\n  methods: {\r\n    async onDestroy(id) {\r\n      const sure = window.confirm('Are you sure?');\r\n      if (!sure) return;\r\n      await api.deleteOne(id);\r\n      this.flash('Item deleted sucessfully!', 'success');\r\n      const newItems = this.items.filter(item => item._id !== id);\r\n      this.items = newItems;\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.items = await api.getAll();\r\n    for (const property in this.items[0]) {\r\n      property !=='_id' ? this.columns.push({prop : property, label: property.toUpperCase()}) : true\r\n    }\r\n  }\r\n};\r\n</script>"]}]}